DROP TABLE IF EXISTS users, events, requests, compilations, compilations_events CASCADE;

CREATE TABLE IF NOT EXISTS users (
        id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        email VARCHAR(255) NOT NULL UNIQUE,
        name VARCHAR(255) NOT NULL
);


CREATE TABLE IF NOT EXISTS categories (
        id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS locations (
        id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        lat FLOAT NOT NULL,
        lon FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
        id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        annotation VARCHAR(2000) NOT NULL,
        category_id INT NOT NULL REFERENCES categories(id),
        confirmed_requests int DEFAULT 0,
        created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
        description VARCHAR(7000),
        event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
        initiator_id INT NOT NULL REFERENCES users(id),
        location_id  INT NOT NULL REFERENCES locations(id),
        paid BOOLEAN NOT NULL DEFAULT false,
        participant_limit int,
        published_on TIMESTAMP WITHOUT TIME ZONE,
        request_moderation BOOLEAN NOT NULL DEFAULT false,
        state VARCHAR(15) NOT NULL,
        title VARCHAR(120) NOT NULL,
        views int NOT NULL DEFAULT 0

);

CREATE TABLE IF NOT EXISTS requests (
        id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        event_id INT NOT NULL REFERENCES events(id),
        requester_id INT NOT NULL REFERENCES users(id),
        status VARCHAR(15) NOT NULL,
        created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
        CONSTRAINT uq_request UNIQUE (requester_id, event_id)

);

CREATE TABLE IF NOT EXISTS compilations (
        id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        pinned BOOLEAN DEFAULT false,
        title VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
        compilation_id INT NOT NULL REFERENCES compilations(id) ON DELETE CASCADE,
        event_id INT NOT NULL REFERENCES events(id) ON DELETE CASCADE,
        PRIMARY KEY (compilation_id, event_id)
);

